{"version":3,"file":"static/js/295.013669b3.chunk.js","mappings":"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","sources":["services/customerAPI.tsx","components/pages/Customer/Customer.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { APIS } from \"../utils/constant\";\n\nexport async function getAllCustomer() {\n  try {\n    const res = await axios.get(APIS.GET_ALL_CUSTOMERS);\n    console.log(res.data);\n\n    return;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Button } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport TextField from \"@mui/material/TextField\";\nimport { makeStyles } from \"@mui/styles\";\nimport { getAllCustomer } from \"../../../services/customerAPI\";\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst useStyles = makeStyles((theme: any) => ({\n  customerFilterContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  },\n  filterItem: {\n    paddingTop: theme.spacing(1),\n    width: 189,\n  },\n  addCustomerButton: {\n    //paddingTop: theme.spacing(1),\n    width: 189,\n    paddingTop: 17,\n    height: \"4.5em\",\n  },\n}));\n\nfunction Customer() {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    designation: \"\",\n  });\n  const [customerList, setCustomerList] = useState([]);\n\n  const onButtonClick = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // Handle form submission here\n    // You can access the form data using `formData` state\n    console.log(formData);\n  };\n\n  const getAllCustomerCallBack = useCallback(async () => {\n    let res = await getAllCustomer();\n    setCustomerList(customerList);\n  }, []);\n\n  useEffect(() => {\n    getAllCustomerCallBack();\n  }, []);\n\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={9}\n        container\n        spacing={1}\n        className={classes.customerFilterContainer}\n      >\n        <Grid item className={classes.filterItem}>\n          <TextField\n            name=\"firstName\"\n            label=\"First Name\"\n            value={formData.firstName}\n            onChange={handleInputChange}\n            fullWidth\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item className={classes.filterItem}>\n          <TextField\n            name=\"lastName\"\n            label=\"Last Name\"\n            value={formData.lastName}\n            onChange={handleInputChange}\n            fullWidth\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item className={classes.filterItem}>\n          <TextField\n            name=\"designation\"\n            label=\"Designation\"\n            value={formData.designation}\n            onChange={handleInputChange}\n            fullWidth\n            margin=\"normal\"\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        item\n        xs={3}\n        container\n        justifyContent=\"flex-end\"\n        className={classes.addCustomerButton}\n      >\n        <Button variant=\"contained\" onClick={onButtonClick}>\n          Add Customer\n        </Button>\n      </Grid>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            style={{ marginBottom: \"16px\" }}\n          >\n            Text in a modal\n          </Typography>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              name=\"firstName\"\n              label=\"First Name\"\n              value={formData.firstName}\n              onChange={handleInputChange}\n              required\n              fullWidth\n              margin=\"normal\"\n            />\n            <TextField\n              name=\"lastName\"\n              label=\"Last Name\"\n              value={formData.lastName}\n              onChange={handleInputChange}\n              required\n              fullWidth\n              margin=\"normal\"\n            />\n            <TextField\n              name=\"designation\"\n              label=\"Designation\"\n              value={formData.designation}\n              onChange={handleInputChange}\n              required\n              fullWidth\n              margin=\"normal\"\n            />\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                marginTop: \"16px\",\n              }}\n            >\n              <Button\n                variant=\"outlined\"\n                onClick={handleClose}\n                style={{ marginRight: \"8px\" }}\n              >\n                Cancel\n              </Button>\n              <Button type=\"submit\" variant=\"contained\">\n                Submit\n              </Button>\n            </div>\n          </form>\n        </Box>\n      </Modal>\n    </Grid>\n  );\n}\n\nexport default Customer;\n"],"names":["getAllCustomer","_getAllCustomer","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","APIS","sent","console","log","data","abrupt","t0","error","stop","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","useStyles","makeStyles","theme","customerFilterContainer","display","alignItems","justifyContent","filterItem","paddingTop","spacing","addCustomerButton","height","classes","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","firstName","lastName","designation","_useState4","formData","setFormData","_useState5","_useState6","customerList","setCustomerList","onButtonClick","useCallback","handleClose","handleInputChange","e","_objectSpread","_defineProperty","target","name","value","getAllCustomerCallBack","useEffect","_jsxs","Grid","container","children","item","xs","className","_jsx","TextField","label","onChange","fullWidth","margin","Button","variant","onClick","Modal","onClose","Box","sx","Typography","id","component","marginBottom","onSubmit","preventDefault","required","marginTop","marginRight","type"],"sourceRoot":""}